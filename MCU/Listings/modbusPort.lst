C51 COMPILER V9.57.0.0   MODBUSPORT                                                        04/29/2018 00:02:33 PAGE 1   


C51 COMPILER V9.57.0.0, COMPILATION OF MODULE MODBUSPORT
OBJECT MODULE PLACED IN .\Objects\modbusPort.obj
COMPILER INVOKED BY: C:\Keil_v5\C51\BIN\C51.EXE Modbus\modbusPort.c LARGE OPTIMIZE(8,SPEED) BROWSE INCDIR(.\Lib;.\uCOSII
                    -;.\Modbus;.\App) DEBUG OBJECTEXTEND PRINT(.\Listings\modbusPort.lst) OBJECT(.\Objects\modbusPort.obj)

line level    source

   1          /*****************************************************************************/
   2          #include "modbusPort.h"
   3          /*****************************************************************************/
   4          static data uint8_t ModbusTL, ModbusTH;
   5          
   6          void ModbusTimer(void *yydata)
   7          {
   8   1      }
*** WARNING C280 IN LINE 6 OF Modbus\modbusPort.c: 'yydata': unreferenced local variable
   9          
  10          static void Timer1Handle() interrupt INTERRUPT_TIMER4
  11          {//硬件计时器TIMER1中断函数 1mS
  12   1              //TL4       = ModbusTL;
  13   1          //TH4       = ModbusTH;
  14   1              modbusTimerHandle();
  15   1      } 
  16          
  17          static void SerialHandle() interrupt INTERRUPT_UART0
  18          {//UART0 串口中断程序
  19   1              OS_ENTER_CRITICAL(); //关闭Ucos 中断
  20   1              if(RI0)
  21   1              {
  22   2                      RI0 = 0;  
  23   2                      modbusSerialRxHandle();
  24   2              }
  25   1              if(TI0)
  26   1              {
  27   2                      TI0 = 0;
  28   2                      modbusSerialTxHandle();
  29   2              }
  30   1              OS_EXIT_CRITICAL();
  31   1      }  
  32          static void modbusSerialSendbyte(uint8_t *dt)
  33          {//串口发送一个字节
  34   1              ES0 = 0;
  35   1              TI0 = 0;
  36   1              SBUF0 = *dt;
  37   1              while( !TI0 );
  38   1              TI0 = 0;
  39   1              ES0 = 1;
  40   1      }
  41          void modbusSerialSendBuffer(uint8_t *buf, uint8_t size)
  42          {//串口发送一组字节
  43   1              uint8_t i;
  44   1              for(i = 0;i < size;i ++)
  45   1              {
  46   2                      modbusSerialSendbyte(buf + i);
  47   2              }
  48   1      }
  49          void InitModbusSerial(int32_t baudrate)
  50          {//初始化MODBUS串口
  51   1              uint32_t temp;
  52   1              CKCON |= 1 << 5;//TIMER2 SYSCLK
  53   1              T2CON |= 1 << 4;//Timer 2 overflows used for transmit clock
C51 COMPILER V9.57.0.0   MODBUSPORT                                                        04/29/2018 00:02:33 PAGE 2   

  54   1              T2CON |= 1 << 5;//Timer 2 overflows used for receive clock
  55   1              temp = (uint32_t)(CONFIG_SYSCLK / 32 / baudrate);
  56   1              temp = 65536 - temp;    
  57   1          RCAP2L    = (uint8_t)(temp & 0xff);
  58   1          RCAP2H    = (uint8_t)((temp >> 8) & 0xff);
  59   1              T2CON |= 1 << 2;//Timer 2 enabled
  60   1              RS485_DIRECTION_RXD;//接收状态
  61   1              ES0 = 1;
  62   1              TI0 = 0;//清除发送完成                  
  63   1              RI0 = 0;//清除接收完成                  
  64   1      }
  65          void InitModbusTimer(void)
  66          {//初始化MODBUS计时器 1mS TIMER1
  67   1              uint16_t temp;
  68   1              temp = (uint16_t)(65536 - (CONFIG_SYSCLK / 12 / 1000));
  69   1              CKCON &= ~(1 << 4);//TIMER1 CLK = SYSCLK / 12
  70   1              TMOD &= 0x0F;
  71   1              TMOD |= (1 << 4);//Mode 1, 16-bit Counter/Timer
  72   1          ModbusTL = (uint8_t)(temp & 0xFF);
  73   1              ModbusTH = (uint8_t)((temp >> 8) & 0xFF);
  74   1              TL1       = ModbusTL;
  75   1          TH1       = ModbusTH;
  76   1              TF1 = 0;
  77   1              TR1 = 1;        
  78   1              ET1 = 1; //开中断T0
  79   1      }
  80          
  81          
  82          
  83          


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    354    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----      10
   PDATA SIZE       =   ----    ----
   DATA SIZE        =      2    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  1 WARNING(S),  0 ERROR(S)
