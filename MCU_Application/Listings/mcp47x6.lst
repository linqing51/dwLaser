C51 COMPILER V9.59.0.0   MCP47X6                                                           12/15/2018 23:48:05 PAGE 1   


C51 COMPILER V9.59.0.0, COMPILATION OF MODULE MCP47X6
OBJECT MODULE PLACED IN .\Objects\mcp47x6.obj
COMPILER INVOKED BY: C:\Keil_v5\C51\BIN\C51.EXE Driver\mcp47x6.c COMPACT OPTIMIZE(8,SPEED) REGFILE(.\Objects\dwLaser_F02
                    -0.ORC) BROWSE ORDER INCDIR(.\Lib;.\Driver;.\MainApp;.\Modbus) DEBUG OBJECTEXTEND PRINT(.\Listings\mcp47x6.lst) OBJECT(.\
                    -Objects\mcp47x6.obj)

line level    source

   1          //MCP47x6 DAC 驱动
   2          #include "mcp47x6.h"
   3          /*****************************************************************************/
   4          #define MCP47X6A0_ADDRESS                                                       0x60
   5          #define WRITE_VOLATILE_DAC_REGISTER                             (0 << 5)
   6          #define WRITE_VOLATILE_MEMORY                                           (2 << 5)
   7          #define WRITE_ALL_MEMORY                                                        (3 << 5)
   8          #define WRITE_VOLATILE_CONFIG_BIT                                       (4 << 5)
   9          #define READ_MEMORY                                                             (6 << 5)
  10          #define REF_VDD                                                                         (0 << 3)//基准源VDD
  11          #define REF_UNBUFFERED                                                          (2 << 3)//未缓冲REF PIN
  12          #define REF_BUFFERED                                                            (3 << 3)//缓冲REF PIN
  13          #define GAIN1                                                                           (0 << 0)//*1
  14          #define GAIN2                                                                           (1 << 0)//*2
  15          #define NOT_POWERED_DOWN                                                        (0 << 1)//无下拉
  16          #define POWERED_DOWN_1K                                                         (1 << 1//1K电阻下拉
  17          #define POWERED_DOWN_100K                                                       (2 << 1)//100K电阻下拉
  18          #define POWERED_DOWN_500K                                                       (3 << 1)//500K电阻下拉
  19          /*****************************************************************************/
  20          static uint16_t Mcp47x6Data[4];
  21          /*****************************************************************************/
  22          uint8_t mcp47x6Init(void)
  23          {//MCP47x6初始化
  24   1              uint8_t temp, flag;
  25   1              //配置位
  26   1              Mcp47x6Data[0] = 0;
  27   1              Mcp47x6Data[1] = 0;
  28   1              Mcp47x6Data[2] = 0;
  29   1              Mcp47x6Data[3] = 0;
  30   1              temp =  WRITE_VOLATILE_MEMORY |//Command
  31   1                              REF_VDD                                 |//REF
  32   1                              NOT_POWERED_DOWN      |//PowerDown
  33   1                      GAIN1;                           //
  34   1              //初始化DAC1
  35   1              iic4Start();
  36   1              
  37   1              iic4SendByte((MCP47X6A0_ADDRESS << 1) & 0xFE);
  38   1              flag = iic4WaitAck();
  39   1              
  40   1              iic4SendByte(temp);
  41   1              flag = iic4WaitAck();
  42   1              
  43   1              iic4SendByte(0x00);
  44   1              flag = iic4WaitAck();
  45   1              
  46   1              iic4SendByte(0x00);
  47   1              flag = iic4WaitAck();
  48   1              
  49   1              iic4Stop();
  50   1              //初始化DAC2
  51   1              iic3Start();
  52   1              
  53   1              iic3SendByte((MCP47X6A0_ADDRESS << 1) & 0xFE);
C51 COMPILER V9.59.0.0   MCP47X6                                                           12/15/2018 23:48:05 PAGE 2   

  54   1              flag = iic3WaitAck();
  55   1              
  56   1              iic3SendByte(temp);
  57   1              flag = iic3WaitAck();
  58   1              
  59   1              iic3SendByte(0x00);
  60   1              flag = iic3WaitAck();
  61   1              
  62   1              iic3SendByte(0x00);
  63   1              flag = iic3WaitAck();
  64   1              
  65   1              iic3Stop();
  66   1              //初始化DAC3
  67   1              iic1Start();
  68   1              
  69   1              iic1SendByte((MCP47X6A0_ADDRESS << 1) & 0xFE);
  70   1              flag = iic1WaitAck();
  71   1              
  72   1              iic1SendByte(temp);
  73   1              flag = iic1WaitAck();
  74   1              
  75   1              iic1SendByte(0x00);
  76   1              flag = iic1WaitAck();
  77   1              
  78   1              iic1SendByte(0x00);
  79   1              flag = iic1WaitAck();
  80   1              
  81   1              iic1Stop();
  82   1              //初始化DAC4
  83   1              iic2Start();
  84   1              
  85   1              iic2SendByte((MCP47X6A0_ADDRESS << 1) & 0xFE);
  86   1              flag = iic2WaitAck();
  87   1              
  88   1              iic2SendByte(temp);
  89   1              flag = iic2WaitAck();
  90   1              
  91   1              iic2SendByte(0x00);
  92   1              flag = iic2WaitAck();
  93   1              
  94   1              iic2SendByte(0x00);
  95   1              flag = iic2WaitAck();
  96   1              
  97   1              iic2Stop();
  98   1              return flag;
  99   1      }
 100          void mcp47x6_write(uint8_t channel, uint16_t dat)
 101          {//设置指示激光电压CODE
 102   1              uint8_t temp, flag;
 103   1              temp = 0x0;
 104   1              switch(channel){
 105   2                      case 1:{
 106   3                              if(Mcp47x6Data[0] != dat)
 107   3                              {
 108   4                                      iic4Start();
 109   4                                      
 110   4                                      iic4SendByte((MCP47X6A0_ADDRESS << 1) & 0xFE);
 111   4                                      flag = iic4WaitAck();
 112   4                                      
 113   4                                      iic4SendByte((dat >> 8) & 0x0F);
 114   4                                      flag = iic4WaitAck();
 115   4                                      
C51 COMPILER V9.59.0.0   MCP47X6                                                           12/15/2018 23:48:05 PAGE 3   

 116   4                                      iic4SendByte(dat & 0xFF);
 117   4                                      flag = iic4WaitAck();
 118   4                                      
 119   4                                      iic4Stop();
 120   4                                      Mcp47x6Data[0] = dat;
 121   4                              }
 122   3                              break;
 123   3                      }
 124   2                      case 2:{
 125   3                              if(Mcp47x6Data[1] != dat)
 126   3                              {
 127   4                                      iic3Start();
 128   4                                      
 129   4                                      iic3SendByte((MCP47X6A0_ADDRESS << 1) & 0xFE);
 130   4                                      flag = iic3WaitAck();
 131   4                                      
 132   4                                      iic3SendByte((dat >> 8) & 0x0F);
 133   4                                      flag = iic3WaitAck();
 134   4                                      
 135   4                                      iic3SendByte(dat & 0xFF);
 136   4                                      flag = iic3WaitAck();
 137   4                                      
 138   4                                      iic3Stop();
 139   4                                      Mcp47x6Data[1] = dat;
 140   4                              }
 141   3                              break;
 142   3                      }
 143   2                      case 3:{
 144   3                              if(Mcp47x6Data[2] != dat)
 145   3                              {
 146   4                                      iic1Start();
 147   4                                      
 148   4                                      iic1SendByte((MCP47X6A0_ADDRESS << 1) & 0xFE);
 149   4                                      flag = iic1WaitAck();
 150   4                                      
 151   4                                      iic1SendByte((dat >> 8) & 0x0F);
 152   4                                      flag = iic1WaitAck();
 153   4                                      
 154   4                                      iic1SendByte(dat & 0xFF);
 155   4                                      flag = iic1WaitAck();
 156   4                                      
 157   4                                      iic1Stop();
 158   4                                      Mcp47x6Data[2] = dat;
 159   4                              }
 160   3                              break;
 161   3                      }
 162   2                      case 4:{
 163   3                              if(Mcp47x6Data[3] != dat)
 164   3                              {
 165   4                                      iic2Start();
 166   4                                      
 167   4                                      iic2SendByte((MCP47X6A0_ADDRESS << 1) & 0xFE);
 168   4                                      flag = iic2WaitAck();
 169   4                                      
 170   4                                      iic2SendByte((dat >> 8) & 0x0F);
 171   4                                      flag = iic2WaitAck();
 172   4                                      
 173   4                                      iic2SendByte(dat & 0xFF);
 174   4                                      flag = iic2WaitAck();
 175   4                                      
 176   4                                      iic2Stop();
 177   4                                      Mcp47x6Data[3] = dat;
C51 COMPILER V9.59.0.0   MCP47X6                                                           12/15/2018 23:48:05 PAGE 4   

 178   4                              }
 179   3                              break;
 180   3                      }
 181   2                      default:break;
 182   2              }
 183   1      }
 184          
 185          uint16_t mcp47x6_read(uint8_t channel)
 186          {//获取指示激光电压CODE
 187   1              switch(channel){
 188   2                      case 1:{
 189   3                              
 190   3                              break;
 191   3                      }
 192   2                      case 2:{
 193   3                              break;
 194   3                      }
 195   2                      case 3:{
 196   3                              break;
 197   3                      }
 198   2                      case 4:{
 199   3                              break;
 200   3                      }
 201   2                      default:break;
 202   2              }
 203   1      }
*** WARNING C173 IN LINE 203 OF Driver\mcp47x6.c: missing return-expression
 204          
 205          
 206          
*** WARNING C290 IN LINE 203 OF Driver\mcp47x6.c: missing return value


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    606    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =      8       6
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  2 WARNING(S),  0 ERROR(S)
