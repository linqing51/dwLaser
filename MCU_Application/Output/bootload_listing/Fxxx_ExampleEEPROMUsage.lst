C51 COMPILER V9.59.0.0   FXXX_EXAMPLEEEPROMUSAGE                                           12/05/2018 16:34:07 PAGE 1   


C51 COMPILER V9.59.0.0, COMPILATION OF MODULE FXXX_EXAMPLEEEPROMUSAGE
OBJECT MODULE PLACED IN .\Output\bootload_output\Fxxx_ExampleEEPROMUsage.obj
COMPILER INVOKED BY: C:\Keil_v5\C51\BIN\C51.EXE FlashEprom\Fxxx_ExampleEEPROMUsage.c COMPACT OPTIMIZE(8,SPEED) BROWSE IN
                    -CDIR(.\Lib;.\LibFlash;.\FlashEprom;.\Bootloader) DEFINE(C8051F020) DEBUG OBJECTEXTEND PRINT(.\Output\bootload_listing\Fx
                    -xx_ExampleEEPROMUsage.lst) PREPRINT(.\Output\bootload_listing\Fxxx_ExampleEEPROMUsage.i) OBJECT(.\Output\bootload_output
                    -\Fxxx_ExampleEEPROMUsage.obj)

line level    source

   1          //-----------------------------------------------------------------------------
   2          // Fxxx_ExampleEEPROMUsage.c
   3          //-----------------------------------------------------------------------------
   4          // Copyright (C) 2010 Silicon Laboratories, Inc.
   5          // http://www.silabs.com
   6          //
   7          // Program Description:
   8          //
   9          // This file is a simple example usage of the EEPROM Emulation firmware.  The
  10          // program reads the current first byte of EEPROM, adds 5 to it, then writes
  11          // the entire EEPROM space with an inverting sequence.  The EEPROM space is
  12          // then read back out into a RAM buffer.
  13          //
  14          //
  15          // Target:         C8051Fxxx Family
  16          // Tool chains:    Keil, Raisonance, SDCC
  17          // Command Line:   None
  18          //
  19          // Release 1.0 / 10NOV2010 (BD)
  20          //    -Initial Revision
  21          //
  22          //-----------------------------------------------------------------------------
  23          
  24          //-----------------------------------------------------------------------------
  25          // Includes
  26          //-----------------------------------------------------------------------------                 
  27          #include "compiler_defs.h"
  28          #include "Fxxx_EEPROM_Configuration.h"
*** WARNING C318 IN LINE 480 OF FlashEprom\Fxxx_Flash_Parameters.h: can't open file 'c8051f310_defs.h'
*** WARNING C317 IN LINE 481 OF FlashEprom\Fxxx_Flash_Parameters.h: attempt to redefine macro 'ENABLE_VDDMON'
*** WARNING C317 IN LINE 482 OF FlashEprom\Fxxx_Flash_Parameters.h: attempt to redefine macro 'DISABLE_WDT'
*** WARNING C317 IN LINE 489 OF FlashEprom\Fxxx_Flash_Parameters.h: attempt to redefine macro 'LOCK_PAGE'
*** WARNING C317 IN LINE 491 OF FlashEprom\Fxxx_Flash_Parameters.h: attempt to redefine macro 'ENABLE_FL_MOD'
*** WARNING C317 IN LINE 492 OF FlashEprom\Fxxx_Flash_Parameters.h: attempt to redefine macro 'DISABLE_FL_MOD'
*** WARNING C317 IN LINE 493 OF FlashEprom\Fxxx_Flash_Parameters.h: attempt to redefine macro 'FL_PROTECT'
  29          #include "Fxxx_EEPROM_Interface.h"
  30          
  31          //-----------------------------------------------------------------------------
  32          // MAIN Routine
  33          //-----------------------------------------------------------------------------
  34          void main (void) 
  35          {
  36   1         SEGMENT_VARIABLE(ramBuffer[EE_SIZE], U8, SEG_DATA);
  37   1         U8 bufferCount;
  38   1         SFRPAGE_SWITCH()
  39   1         ENABLE_VDDMON()
  40   1         DISABLE_WDT()
  41   1         SFRPAGE_RESTORE()                       
  42   1      
  43   1         // Read first byte of EEPROM
  44   1         if (EEPROM_ReadBlock(0, ramBuffer, 1) != EE_NO_ERROR)
  45   1         {
C51 COMPILER V9.59.0.0   FXXX_EXAMPLEEEPROMUSAGE                                           12/05/2018 16:34:07 PAGE 2   

  46   2            while(1);      // Error reading EEPROM
  47   2         }
  48   1         ramBuffer[0] += 5;
  49   1      
  50   1         // Fill RAM buffer with an inverting sequence.
  51   1         for (bufferCount = 1; bufferCount < EE_SIZE; bufferCount++)
  52   1         {
  53   2            ramBuffer[bufferCount] = ~ramBuffer[bufferCount-1];
  54   2         }
  55   1      
  56   1         // Write RAM buffer to EEPROM.
  57   1         if (EEPROM_WriteBlock (0, ramBuffer, EE_SIZE) != EE_NO_ERROR)
  58   1         {
  59   2            while(1);      // Error writing EEPROM
  60   2         }
  61   1      
  62   1         // Read EEPROM contents back into RAM 
  63   1         if (EEPROM_ReadBlock(0, ramBuffer, EE_SIZE) != EE_NO_ERROR)
  64   1         {
  65   2            while(1);      // Error reading EEPROM
  66   2         }
  67   1      
  68   1         while(1);         // No errors occured
  69   1      }
  70          
  71          //-----------------------------------------------------------------------------
  72          // End Of File
  73          //-----------------------------------------------------------------------------


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    105    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----      32
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  7 WARNING(S),  0 ERROR(S)
